services:
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./apps/api:/usr/src/app/apps/api
      - "/Users/kennakomea/DAC Work Documents/Projects/accessibility-scanner-backend/migrations:/usr/src/app/migrations"
      - /usr/src/app/node_modules
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: development
      REDIS_URL: redis://redis:6379
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: accessibility_scanner_dev
      DATABASE_URL: postgresql://user:password@postgres:5432/accessibility_scanner_dev
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/healthz || exit 1"]
      interval: 10s
      timeout: 5s

  worker:
    build:
      context: .
      dockerfile: ./apps/worker/Dockerfile
    volumes:
      - ./apps/worker:/usr/src/app/apps/worker
      - "/Users/kennakomea/DAC Work Documents/Projects/accessibility-scanner-backend/migrations:/usr/src/app/migrations"
      - /usr/src/app/node_modules
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: development
      REDIS_URL: redis://redis:6379
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: accessibility_scanner_dev
      DATABASE_URL: postgresql://user:password@postgres:5432/accessibility_scanner_dev
    healthcheck:
      test: ["CMD-SHELL", "test -f /tmp/healthy_worker"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data

  postgres:
    image: "postgres:15-alpine"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: accessibility_scanner_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d accessibility_scanner_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  redis_data:
  postgres_data: 